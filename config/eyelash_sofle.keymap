#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hold_tab_behavior: hold_tab_behavior {
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAB_BEHAVIOR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <150>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <27 28 30 29 34 35 36 37>;
    };

    combos {
        compatible = "zmk,combos";

        esc_combo {
            bindings = <&kp GRAVE>;
            key-positions = <0 1>;
            layers = <0>;
        };

        quest_mark {
            bindings = <&kp QUESTION>;
            key-positions = <37 38>;
            layers = <0>;
        };

        exc_mark {
            bindings = <&kp EXCL>;
            key-positions = <0 13>;
            layers = <0>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <23 22>;
            layers = <0>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <23 24>;
            layers = <0>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <10 9>;
            layers = <0>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <11 10>;
            layers = <0>;
        };

        right_shift {
            bindings = <&kp RIGHT_SHIFT>;
            key-positions = <50 51>;
            layers = <0>;
        };

        enter {
            bindings = <&kp ENTER>;
            key-positions = <36 37 35>;
            layers = <0>;
        };
    };

    behaviors {
    };

    macros {
        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp C>,
                <&macro_release>,
                <&kp LEFT_GUI &kp C>;

            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_GUI &kp V>,
                <&macro_release>,
                <&kp LEFT_GUI &kp C>;

            label = "PASTE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1                      &kp N2                         &kp N3                             &kp N4                           &kp N5    &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB     &kp Q                       &kp W                          &kp E                              &kp R                            &kp T     &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O    &kp P     &kp BSLH
&kp CAPS    &hold_tab_behavior LCTRL A  &hold_tab_behavior LEFT_ALT S  &hold_tab_behavior LEFT_COMMAND D  &hold_tab_behavior LEFT_SHIFT F  &kp G     &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT   &kp Z                       &kp X                          &kp C                              &kp V                            &kp B     &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RET
&kp C_MUTE  &kp LCTRL                   &kp LEFT_ALT                   &kp LEFT_COMMAND                   &kp SPACE                        &mo 1     &kp ENTER        &kp SPACE  &kp B   &mo 2      &mo 3    &mo 4
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp TILDE  &kp EXCL   &kp AT    &kp HASH  &kp DOLLAR  &kp PERCENT    &mmv MOVE_UP     &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
&kp GRAVE  &kp F1     &kp F2    &kp F3    &kp F4      &kp F5         &mmv MOVE_DOWN   &kp F6     &kp F7         &kp F8        &kp F9                &kp F10                &kp F11
&kp TAB    &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT   &none          &mmv MOVE_LEFT   &none      &none          &none         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp F12
&none      &none      &none     &none     &none       &none          &mmv MOVE_RIGHT  &none      &none          &none         &kp LBKT              &kp RIGHT_BRACKET      &kp ENTER
&none      &none      &none     &none     &none       &kp ENTER      &mkp LCLK        &none      &none          &none         &none                 &none
            >;

            sensor-bindings = <&inc_dec_kp LG(RIGHT_ARROW) LG(LEFT_ARROW)>;
        };

        layer_2 {
            bindings = <
&sys_reset  &none      &none      &none      &none      &none       &mmv MOVE_UP     &none      &none     &none     &none      &none  &none
&none       &none      &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB4    &mmv MOVE_DOWN   &kp PG_UP  &kp HOME  &kp UP    &kp END    &none  &none
&none       &none      &none      &none      &none      &none       &mmv MOVE_LEFT   &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &none  &none
&none       &kp LG(Z)  &kp LG(X)  &copy      &paste     &none       &mmv MOVE_RIGHT  &none      &none     &none     &none      &none  &none
&none       &kp LCTRL  &kp LALT   &kp LGUI   &none      &none       &mkp LCLK        &none      &none     &none     &none      &none
            >;

            display-name = "pointing layer";
            sensor-bindings = <&inc_dec_kp LG(RIGHT_ARROW) LG(LEFT_ARROW)>;
        };

        layer_3 {
            bindings = <
&sys_reset  &none      &none     &none     &none           &none    &msc SCRL_UP     &none  &kp MINUS  &kp EQUAL  &kp STAR  &kp BSPC   &none
&none       &none      &none     &none     &none           &none    &msc SCRL_DOWN   &none  &kp N7     &kp N8     &kp N9    &none      &none
&none       &kp LCTRL  &kp LALT  &kp LGUI  &kp LEFT_SHIFT  &none    &msc SCRL_LEFT   &none  &kp N4     &kp N5     &kp N6    &kp PLUS   &none
&none       &none      &none     &none     &none           &none    &msc SCRL_RIGHT  &none  &kp N1     &kp N2     &kp N3    &kp ENTER  &none
&none       &none      &none     &none     &none           &none    &mkp LCLK        &none  &none      &kp N0     &none     &none
            >;
        };

        layer_4 {
            bindings = <
&sys_reset  &trans     &trans    &trans    &trans     &trans    &trans  &trans  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans      &trans     &trans    &trans    &trans     &trans    &trans  &trans  &kp F7   &kp F8   &kp F9   &trans  &trans
&trans      &kp LCTRL  &kp LALT  &kp LGUI  &kp LSHFT  &trans    &trans  &trans  &kp F4   &kp F5   &kp F6   &trans  &trans
&trans      &trans     &trans    &trans    &trans     &trans    &trans  &trans  &kp F1   &kp F2   &kp F3   &trans  &trans
&trans      &trans     &trans    &trans    &trans     &trans    &trans  &trans  &trans   &trans   &trans   &trans
            >;
        };
    };
};
