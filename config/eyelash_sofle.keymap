#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <100>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59 32 58 19 45 6>;
        hold-trigger-on-release;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <0 1 2 3 4 5 6 13 14 15 16 17 18 19 26 27 28 29 30 31 32 39 40 41 42 43 44 45 52 53 54 55 56 57 58>;
        hold-trigger-on-release;
        tapping-term-ms = <200>;
        quick-tap-ms = <100>;
        flavor = "tap-preferred";
    };

    OSM: OSM {
        compatible = "zmk,behavior-sticky-key";
        label = "OSM";
        bindings = <&kp>;
        #binding-cells = <1>;
        release-after-ms = <200>;
        quick-release;
    };

    tdh: tdh {
        compatible = "zmk,behavior-hold-tap";
        label = "TDH";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <350>;
        require-prior-idle-ms = <50>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
    };

    ide_open_terminal: ide_open_terminal {
        compatible = "zmk,behavior-mod-morph";
        label = "IDE_OPEN_TERMINAL";
        bindings = <&kp ESCAPE>, <&kp LC(GRAVE)>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    ide_open_references: ide_open_references {
        compatible = "zmk,behavior-mod-morph";
        label = "IDE_OPEN_REFERENCES";
        bindings = <&kp F12>, <&kp LA(LS(F12))>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    ide_source_control: ide_source_control {
        compatible = "zmk,behavior-mod-morph";
        label = "IDE_SOURCE_CONTROL";
        bindings = <&kp G>, <&kp LS(LC(G))>;

        #binding-cells = <0>;
        mods = <(MOD_LGUI)>;
    };

    ide_kill_node: ide_kill_node {
        compatible = "zmk,behavior-mod-morph";
        label = "IDE_KILL_NODE";
        bindings = <&kp C>, <&kp LC(C)>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    combos {
        compatible = "zmk,combos";

        mt_equal {
            bindings = <&mt PLUS EQUAL>;
            key-positions = <11 12>;
            layers = <0>;
        };

        mt_minus {
            bindings = <&mt UNDERSCORE MINUS>;
            key-positions = <11 10>;
            layers = <0>;
        };

        backtick {
            bindings = <&kp GRAVE>;
            key-positions = <1 0>;
            layers = <0>;
        };
    };

    behaviors {
    };

    macros {
        ide_refactor: ide_refactor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(R))>;
            label = "IDE_REFACTOR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&ide_open_terminal  &hml EXCL NUMBER_1  &hml AT_SIGN NUMBER_2  &hml HASH NUMBER_3  &hml DOLLAR NUMBER_4  &hml PERCENT N5        &kp UP_ARROW     &hmr CARET NUMBER_6  &hmr AMPERSAND N7  &hmr ASTERISK N8     &hmr LEFT_PARENTHESIS N9  &hmr RIGHT_PARENTHESIS N0  &kp BACKSPACE
&kp TAB             &kp Q               &kp W                  &kp E               &kp R                 &kp T                  &kp DOWN_ARROW   &kp Y                &kp U              &kp I                &kp O                     &kp P                      &mt PIPE BACKSLASH
&kp CAPS            &kp A               &kp S                  &kp D               &kp F                 &ide_source_control    &kp LEFT_ARROW   &kp H                &kp J              &kp K                &kp L                     &mt COLON SEMI             &kp SINGLE_QUOTE
&kp LEFT_SHIFT      &kp Z               &kp X                  &ide_kill_node      &kp V                 &kp B                  &kp RIGHT_ARROW  &kp N                &kp M              &mt LESS_THAN COMMA  &mt GREATER_THAN DOT      &mt QUESTION FSLH          &kp RET
&kp C_MUTE          &kp LCTRL           &kp LEFT_ALT           &kp LEFT_COMMAND    &lt 1 SPACE           &lt 2 SPACE            &kp ENTER        &lt 2 SPACE          &kp B              &kp RIGHT_GUI        &kp RIGHT_ALT             &mt PG_UP PAGE_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&bt BT_CLR_ALL  &trans  &kp F2     &ide_open_references  &trans         &trans            &mmv MOVE_UP     &trans          &trans          &trans        &trans                &trans  &kp PLUS
&trans          &trans  &trans     &trans                &ide_refactor  &msc SCRL_UP      &mmv MOVE_DOWN   &trans          &trans          &kp F2        &ide_open_references  &trans  &trans
&trans          &trans  &mkp LCLK  &mkp MCLK             &mkp RCLK      &msc SCRL_DOWN    &mmv MOVE_LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW       &trans  &trans
&trans          &trans  &trans     &trans                &trans         &trans            &mmv MOVE_RIGHT  &trans          &trans          &trans        &trans                &trans  &trans
&trans          &trans  &trans     &trans                &trans         &trans            &mkp LCLK        &trans          &trans          &trans        &trans                &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans     &trans            &trans  &trans     &trans           &trans             &trans  &kp MINUS       &kp PLUS
&trans  &trans  &trans  &trans  &trans     &trans            &trans  &kp GRAVE  &kp TILDE        &trans             &trans  &kp LEFT_BRACE  &kp RIGHT_BRACE
&trans  &trans  &trans  &trans  &kp GRAVE  &kp UNDERSCORE    &trans  &kp MINUS  &kp LEFT_BRACE   &kp LEFT_BRACKET   &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans     &trans            &trans  &kp EQUAL  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans  &trans          &trans
&trans  &trans  &trans  &trans  &trans     &trans            &trans  &trans     &trans           &trans             &trans  &trans
            >;
        };
    };
};
