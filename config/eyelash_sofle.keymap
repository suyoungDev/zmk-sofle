#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    hml: hml {
        compatible = "zmk,behavior-hold-tap";
        label = "HML";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick-tap-ms = <130>;
        flavor = "tap-preferred";
        hold-trigger-key-positions = <7 8 9 10 11 12 20 21 22 23 24 25 33 34 35 36 37 38 46 47 48 49 50 51 60 61 62 63 59 32 58 19 45 6>;
        hold-trigger-on-release;
    };

    hmr: hmr {
        compatible = "zmk,behavior-hold-tap";
        label = "HMR";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        hold-trigger-key-positions = <0 1 2 3 4 5 6 13 14 15 16 17 18 19 26 27 28 29 30 31 32 39 40 41 42 43 44 45 52 53 54 55 56 57 58>;
        hold-trigger-on-release;
        tapping-term-ms = <200>;
        quick-tap-ms = <135>;
        flavor = "tap-preferred";
    };

    tdh_1: tdh_1 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_1";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_1>, <&tdh F1 EXCL>;

        tapping-term-ms = <200>;
    };

    tdh_2: tdh_2 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_2";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_2>, <&tdh F2 AT_SIGN>;
    };

    tdh_3: tdh_3 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_3";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_3>, <&tdh F3 HASH>;
    };

    tdh_4: tdh_4 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_4";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_4>, <&tdh F4 DOLLAR>;
    };

    tdh_5: tdh_5 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_5";
        #binding-cells = <0>;
        bindings = <&kp N5>, <&tdh F5 CARET>;
    };

    tdh_6: tdh_6 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_6";
        #binding-cells = <0>;
        bindings = <&kp NUMBER_6>, <&tdh F6 CARET>;
    };

    tdh_7: tdh_7 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_7";
        #binding-cells = <0>;
        bindings = <&kp N7>, <&tdh F7 AMPERSAND>;
    };

    tdh_8: tdh_8 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_8";
        #binding-cells = <0>;
        bindings = <&kp N8>, <&tdh F8 ASTERISK>;
    };

    tdh_9: tdh_9 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_9";
        #binding-cells = <0>;
        bindings = <&kp N9>, <&tdh F9 LEFT_PARENTHESIS>;
    };

    tdh_0: tdh_0 {
        compatible = "zmk,behavior-tap-dance";
        label = "TDH_0";
        #binding-cells = <0>;
        bindings = <&kp N0>, <&tdh F10 RIGHT_PARENTHESIS>;
    };

    td_shift_dash: td_shift_dash {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_SHIFT_DASH";
        #binding-cells = <0>;
        bindings = <&kp MINUS>, <&kp UNDERSCORE>;
    };

    td_shift_equal: td_shift_equal {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_SHIFT_EQUAL";
        #binding-cells = <0>;
        bindings = <&kp EQUAL>, <&kp PLUS>;
    };

    td_shift_grave: td_shift_grave {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_SHIFT_GRAVE";
        #binding-cells = <0>;
        bindings = <&kp GRAVE>, <&kp TILDE>;
    };

    OSM: OSM {
        compatible = "zmk,behavior-sticky-key";
        label = "OSM";
        bindings = <&kp>;
        #binding-cells = <1>;
        release-after-ms = <200>;
        quick-release;
    };

    td_pipe: td_pipe {
        compatible = "zmk,behavior-tap-dance";
        label = "TD_PIPE";
        #binding-cells = <0>;
        bindings = <&kp BACKSLASH>, <&kp PIPE>;
    };

    tdh: tdh {
        compatible = "zmk,behavior-hold-tap";
        label = "TDH";
        bindings = <&kp>, <&kp>;

        #binding-cells = <2>;
        tapping-term-ms = <350>;
        require-prior-idle-ms = <50>;
        quick-tap-ms = <200>;
        flavor = "tap-preferred";
    };

    open_terminal: open_terminal {
        compatible = "zmk,behavior-mod-morph";
        label = "OPEN_TERMINAL";
        bindings = <&kp GRAVE>, <&kp LC(GRAVE)>;

        #binding-cells = <0>;
        mods = <(MOD_LSFT)>;
    };

    combos {
        compatible = "zmk,combos";

        td_equal {
            bindings = <&td_shift_equal>;
            key-positions = <11 12>;
            layers = <0>;
        };

        td_minus {
            bindings = <&td_shift_dash>;
            key-positions = <11 10>;
            layers = <0>;
        };

        bracket_left {
            bindings = <&kp LBRC>;
            key-positions = <24 23>;
            layers = <0>;
            timeout-ms = <150>;
        };

        bracket_right {
            bindings = <&kp RBRC>;
            key-positions = <24 25>;
            layers = <0>;
            timeout-ms = <150>;
        };

        refresh {
            bindings = <&hard_refresh>;
            key-positions = <4 5>;
            layers = <0>;
        };
    };

    behaviors {
    };

    macros {
        hard_refresh: hard_refresh {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LG(R))>;
            label = "HARD_REFRESH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&mt GRAVE ESCAPE  &mt EXCLAMATION NUMBER_1  &mt AT_SIGN NUMBER_2  &mt HASH NUMBER_3  &mt DOLLAR NUMBER_4  &mt PERCENT N5    &kp UP_ARROW     &mt LCTRL NUMBER_6  &mt AMPERSAND N7  &mt ASTERISK N8  &mt LEFT_PARENTHESIS N9  &mt RIGHT_PARENTHESIS N0  &kp BACKSPACE
&kp TAB           &kp Q                     &kp W                 &kp E              &kp R                &kp T             &kp DOWN_ARROW   &kp Y               &kp U             &kp I            &kp O                    &kp P                     &mt PIPE BACKSLASH
&kp CAPS          &kp A                     &kp S                 &kp D              &kp F                &kp G             &kp LEFT_ARROW   &kp H               &kp J             &kp K            &kp L                    &kp SEMI                  &kp APOS
&open_terminal    &kp Z                     &kp X                 &kp C              &kp V                &kp B             &kp RIGHT_ARROW  &kp N               &kp M             &kp COMMA        &kp DOT                  &mt QUESTION FSLH         &kp RET
&kp C_MUTE        &OSM LCTRL                &OSM LEFT_ALT         &OSM LEFT_COMMAND  &lt 1 SPACE          &lt 1 SPACE       &kp ENTER        &lt 2 SPACE         &kp B             &mo 2            &mo 0                    &hmr PG_UP PAGE_DOWN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&bt BT_CLR_ALL  &trans  &trans        &trans          &trans     &trans    &mmv MOVE_UP     &trans  &kp F10  &kp F11  &kp F12  &trans  &trans
&trans          &trans  &msc SCRL_UP  &msc SCRL_DOWN  &trans     &trans    &mmv MOVE_DOWN   &trans  &kp F7   &kp F8   &kp F9   &trans  &trans
&trans          &trans  &mkp LCLK     &mkp MCLK       &mkp RCLK  &trans    &mmv MOVE_LEFT   &trans  &kp F4   &kp F5   &kp F6   &trans  &trans
&trans          &trans  &trans        &trans          &trans     &trans    &mmv MOVE_RIGHT  &trans  &kp F1   &kp F2   &kp F3   &trans  &trans
&trans          &trans  &trans        &trans          &trans     &trans    &mkp LCLK        &trans  &trans   &trans   &trans   &trans
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&trans     &trans    &trans       &trans        &trans      &trans         &trans  &trans     &trans                &trans        &trans                &trans                 &trans
&kp GRAVE  &kp N1    &kp N2       &kp N3        &kp N4      &kp N5         &trans  &kp N6     &kp N7                &kp N8        &kp N9                &kp N0                 &trans
&kp TILDE  &kp EXCL  &kp AT_SIGN  &kp HASH      &kp DOLLAR  &kp PERCENT    &trans  &kp LCTRL  &kp AMPERSAND         &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE
&trans     &kp PLUS  &kp MINUS    &kp ASTERISK  &kp SLASH   &kp EQUAL      &trans  &kp SLASH  &kp NON_US_BACKSLASH  &kp PIPE      &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp RIGHT_BRACE
&trans     &trans    &trans       &trans        &trans      &trans         &trans  &trans     &trans                &trans        &trans                &trans
            >;
        };
    };
};
